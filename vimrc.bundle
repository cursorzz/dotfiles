"	需要先安装flake8
Bundle   'gmarik/vundle'
Bundle   'vim-flake8'
Bundle   'pyflakes.vim'
Bundle 'fatih/vim-go'
"Bundle   'christoomey/vim-tmux-navigator'
"	使用vim-syntastic需要flake8
Bundle 'Syntastic'
"let g:syntastic_python_checkers = ['pylint']

Plugin 'SirVer/ultisnips'

" Snippets are separated from the engine. Add this if you want them:
Plugin 'honza/vim-snippets'

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
"let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"
"Bundle 'Lokaltog/vim-powerline'
"let g:Powerline_stl_path_style = 'short'
"Bundle 'groenewege/vim-less'
"Bundle 'lastpos.vim'
"	注释管理插件
Bundle 'scrooloose/nerdcommenter'
"	 python文档查找，使用Pydoc <keyword>，如Pydoc re
"    PydocSearch <keyword>
"    当光标在某个词上时按'\pW'
"Bundle 'fs111/pydoc.vim'
"	Python代码折叠，F换发所有折叠，f触发光标所在位置折叠，Shift+e执行当前脚本
Bundle 'python.vim'
"	Python拼写检查，:cc定位语法错误
"Bundle    'vim-fugitive'
Bundle 'tpope/vim-fugitive'
Bundle    'pangloss/vim-javascript'
Bundle    'nathanaelkane/vim-indent-guides'
"Bundle    'tpope/vim-vividchalk'
"Bundle   'zeis/vim-kolor'
"Bundle    'Yggdroot/indentLine'
Bundle 'jmcomets/vim-pony'
"
"Bundle 'sandeepcr529/Buffet.vim'
" 补全ruby的end
Bundle 'tpope/vim-endwise'
Bundle 'vim-ruby/vim-ruby'
" Edit xml and html easily
"Bundle 'xmledit'
"	pyton pep8代码风格检查
"Bundle 'pep8.vim'
"	自动语法检查，需要pyflakes
"	默认迅捷 键是cs
"	g:pcs_hotkey，修改快捷键
"	g:pcs_check_when_saving，保存时检查
"Bundle 'python_check_syntax.vim'
"Bundle 'python_fn.vim'
"	文件浏览器，NerdTree命令
Bundle 'The-NERD-tree'
Bundle 'VimExplorer'
"Bundle 'lookupfile'
Bundle 'genutils'
"	使用Tab补全Python
"Bundle 'Pydiction'
Bundle 'davidhalter/jedi-vim'
let g:jedi#documentation_command = ""
let g:jedi#popup_select_first = 0
let g:jedi#popup_on_dot = 0
Bundle 'AutoComplPop'
"Bundle 'Valloric/YouCompleteMe'
"
"	自动弹出补全窗口
"Bundle 'taglist.vim'
"比taglist更好的代码结构浏览
Bundle 'majutsushi/tagbar'
Bundle 'tpope/vim-surround'
Bundle 'xolox/vim-notes'

Bundle 'xolox/vim-misc'
:let g:notes_directories = ['~/Documents/Notes']
"Bundle 'winmanager'
"	在vim中运行shell
"Bundle 'Conque-Shell'
"	快速插入内容
"Bundle 'snipMate'
"Bundle 'mattn/zencoding-vim'
  "let g:user_zen_leader_key = '<c-y>'
" better than zen_code
Bundle 'mattn/emmet-vim'
"Bundle 'morhetz/gruvbox'
"Bundle 'chriskempson/tomorrow-theme'


filetype plugin indent on
"    安装所设置插件
"    安装：BundleInstall，更新：BundleInstall!，卸载不在列表的插件：BundleClean
"    au VimEnter * BundleInstall
"vundle设置 end---------------------------------------------------------------
"
" some colorscheme bundles
Bundle 'vim-scripts/xoria256.vim'

"Bundle 'godlygeek/tabular'
Bundle 'tpope/vim-markdown'
"Bundle 'plasticboy/vim-markdown'
"Bundle 'shougo/vimshell.vim'
"Bundle 'jnwhiteh/vim-golang'
"Bundle 'yonchu/accelerated-smooth-scroll'
Bundle 'kien/ctrlp.vim'
Bundle 'flazz/vim-colorschemes'
Bundle 'gcmt/wildfire.vim'
"Bundle 'ervandew/supertab'
"Bundle 'rking/ag.vim'
Bundle 'ack.vim'
" tab上显示tab的index
Bundle "mkitt/tabline.vim"
"Bundle "tpope/vim-rails"
" Track the engine.
" better movement
"Bundle 'Lokaltog/vim-easymotion'
Bundle 'JazzCore/ctrlp-cmatcher'
"Plugin 'tacahiroy/ctrlp-funky'
"let g:ctrlp_extensions = ['funky']
Plugin 'tpope/vim-eunuch'
